#!/bin/bash

debug_(){
    LOG_FILE=/var/log/hostvn/$(date +%F)_create_le.log
    exec 5> "${LOG_FILE}"
    BASH_XTRACEFD="5"
    PS4='$LINENO: '
    set -x
}

debug_

# shellcheck disable=SC1091
source /var/hostvn/hostvn.conf
# shellcheck disable=SC1091
source /var/hostvn/menu/helpers/menu
# shellcheck disable=SC1091
source /var/hostvn/menu/helpers/variable_common
# shellcheck disable=SC1091
source /var/hostvn/menu/helpers/function

echo "-------------------------------------------------------------------------"
echo "Thêm SSL - Let's Encrypt"
echo "-------------------------------------------------------------------------"
echo

set_variable(){
    server_ip=$(ip route get 1 | awk '{print $NF;exit}')
    username=$(grep "username" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
    php_mode=$(grep "php_mode" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')
    plugin_cache="$(grep "plugin_cache" "${USER_DIR}/.${domain}.conf" | cut -f2 -d'=')"
    rewrite="include /etc/nginx/rewrite/${SOURCE}.conf;"
    cache="include /etc/nginx/extra/staticfiles.conf;"
    wp_secure=""
    brute=""
}

check_nginx_status(){
    nginx="$(systemctl status nginx.service | grep 'Active' | cut -f2 -d':' | xargs | cut -f1 -d' ' | xargs)"

    if [[ "$nginx" != "active" ]]; then
        clear
        echo "Nginx hiện tại không hoạt động. Vui lòng kiểm tra lại."
        echo
        menu_letencrypt
    fi
}

check_dns(){
    a_record=$(dig -4 +nocomments @8.8.8.8 +short A ${domain})
    www_record=$(dig -4 +nocomments @8.8.8.8 +short A www.${domain})
    if [[ "${a_record}" != "${server_ip}" || "${www_record}" != "${server_ip}" ]]; then
        echo "Tên miền chưa được trỏ về VPS hoặc DNS chưa được cập nhật. Vui lòng kiểm tra lại.\n"
        echo "Nếu bạn mới trỏ tên miền vui lòng đợi 30 phút đến 24 tiếng để DNS cập nhật sau đó thử lại."
        sleep 2
        echo
        menu_letencrypt
    fi
}

check_plugins_cache(){
    if [[ -d "/home/${username}/${domain}/public_html/wp-content/plugins/w3-total-cache" ]]; then
        cache="include /etc/nginx/wordpress/w3c.conf;"
        wp_secure="/etc/nginx/wordpress/wordpress_secure.conf"
    elif [[ -d "/home/${username}/${domain}/public_html/wp-content/plugins/wp-fastest-cache" ]]; then
        rewrite=""
        cache="include /etc/nginx/wordpress/wpfc.conf;"
        wp_secure="/etc/nginx/wordpress/wordpress_secure.conf"
    elif [[ -d "/home/${username}/${domain}/public_html/wp-content/plugins/wp-rocket" ]]; then
        rewrite=""
        cache="include /etc/nginx/wordpress/wprocket.conf;"
        wp_secure="/etc/nginx/wordpress/wordpress_secure.conf"
    elif [[ -d "/home/${username}/${domain}/public_html/wp-content/plugins/wp-super-cache" ]]; then
        rewrite=""
        cache="include /etc/nginx/wordpress/wpsc.conf;"
        wp_secure="/etc/nginx/wordpress/wordpress_secure.conf"
    elif [[ -d "/home/${username}/${domain}/public_html/wp-content/plugins/cache-enabler" ]]; then
        rewrite=""
        cache="include /etc/nginx/wordpress/enabler.conf;"
        wp_secure="/etc/nginx/wordpress/wordpress_secure.conf"
    elif [[ -d "/home/${username}/${domain}/public_html/wp-content/plugins/swift-performance-lite" && "${plugin_cache}" == "swift1" ]]; then
        cache="include /etc/nginx/extra/staticfiles.conf;"
        wp_secure="/etc/nginx/wordpress/wordpress_secure.conf"
    elif [[ -d "/home/${username}/${domain}/public_html/wp-content/plugins/swift-performance-lite" && "${plugin_cache}" == "swift2" ]]; then
        cache="include /etc/nginx/wordpress/swift2.conf;"
        wp_secure="/etc/nginx/wordpress/wordpress_secure.conf"
    else
        plugin_cache="other"
        wp_secure="/etc/nginx/wordpress/wordpress_secure.conf"
    fi
}

backup_vhost(){
    if [[ -f "/etc/nginx/backup_vhost/${domain}.conf.orig" ]]; then
        rm -rf /etc/nginx/backup_vhost/"${domain}".conf.orig
    fi

    mv "/etc/nginx/conf.d/$domain.conf" "/etc/nginx/backup_vhost/${domain}.conf.orig"
}

sign_ssl(){
    /usr/local/bin/certbot-auto --nginx --no-bootstrap -d ${domain} -d www.${domain}
}

auto_renew(){
    if [[ ! -f /var/spool/cron/root ]]; then
        echo "45 2 * * 6 /usr/local/bin/certbot-auto renew >/dev/null 2>&1" >> /var/spool/cron/root
        echo "50 2 * * 6 systemctl restart nginx >/dev/null 2>&1" >> /var/spool/cron/root
        systemctl restart crond
    else
        check_cron=$(grep -c "certbot-auto renew" "/var/spool/cron/root")
        if [[ "${check_cron}" != 1 ]]; then
            echo "45 2 * * 6 /usr/local/bin/certbot-auto renew >/dev/null 2>&1" >> /var/spool/cron/root
            echo "50 2 * * 6 systemctl restart nginx >/dev/null 2>&1" >> /var/spool/cron/root
            systemctl restart crond
        fi
    fi
}

create_ssl_vhost(){
    backup_vhost
    set_rewrite
    fastcgi

    if [[ "${SOURCE}" == "wordpress" ]]; then
        check_plugins_cache
        brute_force_wp
    fi

    cat >> "${VHOST_DIR}/${domain}.conf" << END
server {
    listen 80;
    #listen [::]:80;
    server_name ${domain} www.${domain};

    root /home/${username}/${domain}/public_html/;
    if (\$http_x_forwarded_proto != 'https') {
        return 301 https://\$host\$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name ${domain} www.${domain};

    access_log off;
    #access_log /home/${username}/${domain}/logs/access.log;
    log_not_found off;
    #error_log off;
    error_log /home/${username}/${domain}/logs/error.log;

    root /home/${username}/${domain}/public_html/;
    index index.php index.html index.htm;

    ${rewrite}
    ${cache}

    ssl_certificate         /etc/letsencrypt/live/${domain}/fullchain.pem;
    ssl_certificate_key     /etc/letsencrypt/live/${domain}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/${domain}/chain.pem;

    location ~ \.php\$
    {
        try_files \$uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)\$;
        fastcgi_index index.php;
        include /etc/nginx/fastcgi_params;
        include /etc/nginx/extra/nginx_limits.conf;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        if (-f \$request_filename)
        {
            ${fastcgi_pass}
        }
    }

    ${brute}
    ${wp_secure}
    include /etc/nginx/extra/security.conf;
}
END
}

restart_nginx(){
    systemctl restart nginx.service
}

run(){
    check_nginx_status
    select_domain menu_letencrypt
    select_source

    if [[ "${SOURCE}" == "wordpress" ]]; then
        plugin_cache
    fi

    set_variable
    check_dns
    check_domain_exists
    sign_ssl
    auto_renew
    create_ssl_vhost
    restart_nginx
}

run

echo ""
echo "Tạo SSL Let's Encrypt thành công"
sleep 2
menu_letencrypt