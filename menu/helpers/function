#!/bin/bash

controller_domain(){
    . /var/hostvn/script/domain
}


controller_csf(){
    . /var/hostvn/script/csf
}

controller_permission(){
    . /var/hostvn/script/permission
}

controller_ssh(){
    . /var/hostvn/script/ssh
}

controller_cache(){
    . /var/hostvn/script/cache
}

controller_nginx(){
    . /var/hostvn/script/nginx
}

controller_lets_encrypt(){
    . /var/hostvn/script/letencrypt
}

menu_primary(){
    . /var/hostvn/script/menu/hvn
}

cd_dir(){
    cd "$1" || return
}

valid_number(){
    REGEX_NUMBER='^[0-9]+$'
    if ! [[ $1 =~ ${REGEX_NUMBER} ]]; then
        return 0
    else
        return 1
    fi
}

convert_to_mb(){
    local -i bytes=$1;
    if [[ $bytes -lt 1024 ]]; then
        echo "${bytes} B"
    elif [[ $bytes -lt 1048576 ]]; then
        echo "$(( (bytes + 1023)/1024 )) MB"
    else
        echo "$(( (bytes + 1048575)/1048576 )) GB"
    fi
}

php_parameter(){

}

select_domain(){
    domain=""
    if [ "$(ls -At /var/hostvn/script/users)" ]; then
        echo "Danh sách domain"
        selects=()
        cd_dir "/var/hostvn/script/users"
        for entry in .*.conf; do
            domain=$( echo "$entry" | sed 's/^.//' | sed 's/.conf//')
            if [ "$domain" != "${domain/.}" ]; then
                selects+=("${domain}")
            fi
        done
        PS3="Nhập lựa chọn của bạn [0=Exit]: "
        select select in "${selects[@]}"
        do
            domain=$select
            break
        done
    else
    clear
    echo "Không có Domain nào tồn tại trên hệ thống"
    menu_primary
    fi
}

check_domain_exists(){
    if [ "${domain}" = '' ]; then
        clear
        echo "Bạn chưa chọn Domain."
        echo
        menu_primary
    fi

    if [ "${domain}" = "${domain/.}" ]; then
        clear
        echo "Domain bạn chọn không đúng định dạng."
        echo
        menu_primary
    fi

    path="/var/hostvn/script/users/.${domain}.conf"
    if [[ ! -f "${path}" ]]; then
        clear
        echo "Domain không tồn tại trên VPS."
        echo
        menu_primary
    fi
}

# Select Source
select_source(){
    SOURCE="Other"
    echo "Lựa chọn mã nguồn để tạo Rewrite Url"
    PS3='Nhập lựa chọn của bạn (1-14): '
    options=("WordPress" "Laravel" "CodeIgniter" "Xenforo" "Joomla" "Drupal" "OpenCart" "WHMCS" "PrestaShop" "Yii" "NextCloud" "Discuz" "Ecshop" "Other")
    select opt in "${options[@]}"
    do
        case $opt in
            "WordPress") SOURCE="wordpress"; break;;
            "Laravel") SOURCE="laravel"; break;;
            "CodeIgniter") SOURCE="codeigniter"; break;;
            "Xenforo") SOURCE="xenforo"; break;;
            "Joomla") SOURCE="joomla"; break;;
            "Drupal") SOURCE="drupal"; break;;
            "OpenCart") SOURCE="opencart"; break;;
            "WHMCS") SOURCE="whmcs"; break;;
            "PrestaShop") SOURCE="prestashop"; break;;
            "Yii") SOURCE="yii"; break;;
            "NextCloud") SOURCE="nextcloud"; break;;
            "Discuz") SOURCE="discuz"; break;;
            "Ecshop") SOURCE="ecshop"; break;;
            "Other") SOURCE="default"; break;;
            *) printf "Bạn nhập sai, hệ thống sẽ tạo Rewrite Url mặc định.\n"; break;;
        esac
    done
}

set_rewrite(){
    if [ "${SOURCE}" == "wordpress" ]; then
        rewrite="include /etc/nginx/rewrite/wordpress.conf;"
        wp_secure="include /etc/nginx/wordpress/wordpress_secure.conf;"
    elif [ "${SOURCE}" == "laravel" ]; then
        rewrite="include /etc/nginx/rewrite/laravel.conf;"
    elif [ "${SOURCE}" == "codeigniter" ]; then
        rewrite="include /etc/nginx/rewrite/codeigniter.conf;"
    elif [ "${SOURCE}" == "xenforo" ]; then
        rewrite="include /etc/nginx/rewrite/xenforo.conf;"
    elif [ "${SOURCE}" == "joomla" ]; then
        rewrite="include /etc/nginx/rewrite/joomla.conf;"
    elif [ "${SOURCE}" == "drupal" ]; then
        rewrite="include /etc/nginx/rewrite/drupal.conf;"
    elif [ "${SOURCE}" == "opencart" ]; then
        rewrite="include /etc/nginx/rewrite/opencart.conf;"
    elif [ "${SOURCE}" == "whmcs" ]; then
        rewrite="include /etc/nginx/rewrite/whmcs.conf;"
    elif [ "${SOURCE}" == "prestashop" ]; then
        rewrite="include /etc/nginx/rewrite/prestashop.conf;"
    elif [ "${SOURCE}" == "yii" ]; then
        rewrite="include /etc/nginx/rewrite/yii.conf;"
    elif [ "${SOURCE}" == "nextcloud" ]; then
        rewrite="include /etc/nginx/rewrite/nextcloud.conf;"
    elif [ "${SOURCE}" == "discuz" ]; then
        rewrite="include /etc/nginx/rewrite/discuz.conf;"
    elif [ "${SOURCE}" == "ecshop" ]; then
        rewrite="include /etc/nginx/rewrite/ecshop.conf;"
    else
        rewrite="include /etc/nginx/rewrite/default.conf;"
    fi
}

fastcgi(){
    fastcgi_pass="fastcgi_pass unix:/var/run/php-fpm/${username}.sock;"

    if [[ "${php_use}" == "2" ]]; then
        fastcgi_pass="fastcgi_pass unix:/opt/remi/${php2_version}/root/var/run/php-fpm/${username}.sock;"
    fi
}

plugin_cache(){
    plugins_cache="n"
    echo "Lựa chọn Plugins cache mà bạn sử dụng ?"
    PS3='Nhập lựa chọn của bạn (1-2): '
    options=("W3 Total Cache" "WP Fastest Cache" "WP Rocket" "WP Super Cache" "Cache Enabler" "Swift Performance - PHP Caching Mode" "Swift Performance - Rewrite Caching Mode" "Other")
    select opt in "${options[@]}"
    do
        case $opt in
            "W3 Total Cache") plugins_cache="w3c"; break;;
            "WP Fastest Cache") plugins_cache="wpfc"; break;;
            "WP Rocket") plugins_cache="wprocket"; break;;
            "WP Super Cache") plugins_cache="wpsc"; break;;
            "Cache Enabler") plugins_cache="enabler"; break;;
            "Swift Performance - PHP Caching Mode") plugins_cache="swift1"; break;;
            "Swift Performance - Rewrite Caching Mode") plugins_cache="swift2"; break;;
            "Other") plugins_cache="other"; break;;
            *) printf "Bạn nhập sai, huỷ tự động config cấu hình cho plugins cache.\n"; break;;
        esac
    done
}

browser_cache(){
    if [[ "${plugins_cache}" == "w3c" ]]; then
        plugin_cache="w3c"
        cache="include /etc/nginx/wordpress/w3c.conf;"
        wp_secure="include /etc/nginx/wordpress/wordpress_secure.conf;"
    elif [[ "${plugins_cache}" == "wpfc" ]]; then
        plugin_cache="wpfc"
        cache="include /etc/nginx/wordpress/wpfc.conf;"
        wp_secure="include /etc/nginx/wordpress/wordpress_secure.conf;"
        rewrite=""
    elif [[ "${plugins_cache}" == "wprocket" ]]; then
        plugin_cache="wprocket"
        cache="include /etc/nginx/wordpress/wprocket.conf;"
        wp_secure="include /etc/nginx/wordpress/wordpress_secure.conf;"
        rewrite=""
    elif [[ "${plugins_cache}" == "wpsc" ]]; then
        plugin_cache="wpsc"
        cache="include /etc/nginx/wordpress/wpsc.conf;"
        wp_secure="include /etc/nginx/wordpress/wordpress_secure.conf;"
        rewrite=""
    elif [[ "${plugins_cache}" == "enabler" ]]; then
        plugin_cache="enabler"
        cache="include /etc/nginx/wordpress/enabler.conf;"
        wp_secure="include /etc/nginx/wordpress/wordpress_secure.conf;"
        rewrite=""
    elif [[ "${plugins_cache}" == "swift1" ]]; then
        plugin_cache="swift1"
        cache="include /etc/nginx/extra/staticfiles.conf;"
        wp_secure="include /etc/nginx/wordpress/wordpress_secure.conf;"
        rewrite="include /etc/nginx/rewrite/${SOURCE}.conf;"
    elif [[ "${plugins_cache}" == "swift2" ]]; then
        plugin_cache="swift2"
        cache="include /etc/nginx/wordpress/swift2.conf;"
        wp_secure="include /etc/nginx/wordpress/wordpress_secure.conf;"
        rewrite="include /etc/nginx/rewrite/${SOURCE}.conf;"
    else
        wp_secure=""
        plugin_cache="other"
        rewrite="include /etc/nginx/rewrite/${SOURCE}.conf;"
    fi
}

brute_force_wp(){
    brute="location = /wp-login.php {
        limit_req zone=two burst=1 nodelay;
        include /etc/nginx/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME \$document_root\$fastcgi_script_name;
        ${fastcgi_pass}
    }"
}

restart_service(){
    systemctl restart nginx.service
    systemctl restart php-fpm.service
}